{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["provider","require","App","onboard","Onboard","dappId","networkId","subscriptions","wallet","ethers","providers","Web3Provider","console","log","getSigner","name","a","walletSelect","walletCheck","getBlockNumber","blocknumb","className","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gcAqBIA,E,sGAJMC,EAAQ,KAsDHC,MA/Cf,WAEE,IAAMC,EAAUC,YAAQ,CACtBC,OAAQ,uCACRC,UAAW,EACXC,cAAe,CACbC,OAAQ,SAAAA,GACNR,EAAW,IAAIS,SAAOC,UAAUC,aAAaH,EAAOR,UACpDY,QAAQC,IAAIb,GACHA,EAASc,YAClBF,QAAQC,IAAR,uBAA4BL,EAAOO,WAV5B,4CAgBZ,sBAAAC,EAAA,sEACOb,EAAQc,eADf,uBAEOd,EAAQe,cAFf,4CAhBY,kEAqBX,4BAAAF,EAAA,sEAE0BhB,EAASmB,iBAFnC,OAEQC,EAFR,OAGER,QAAQC,IAAIO,GAHd,4CArBW,sBA2Bb,OACE,sBAAKC,UAAU,MAAf,UACE,sBAAKA,UAAU,wBAAf,UACE,wBAAQC,QA9BD,2CA8BP,+BAGA,wBAAQA,QAjCD,2CAiCP,kCAIF,qBAAKD,UAAU,gBC/CNE,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,gCAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,SCFdQ,IAASC,OAEP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.21f03c16.chunk.js","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport {useState} from 'react';\nimport './App.css';\nimport {\n  RecoilRoot,\n  atom,\n  selector,\n  useRecoilState,\n  useRecoilValue,\n} from 'recoil';\nimport Onboard from 'bnc-onboard'\nimport Web3 from 'web3'\nimport { ethers } from \"ethers\";\n\n\n\nvar Eth = require('web3-eth');\nlet web3;\n\n// @ts-ignore\nlet provider\nlet signer\n\nfunction App() {\n\n  const onboard = Onboard({\n    dappId: \"3bbe9d54-ac92-483d-92b0-dbaebe33768e\",       // [String] The API key created by step one above\n    networkId: 4,  // [Integer] The Ethereum network ID your Dapp uses.\n    subscriptions: {\n      wallet: wallet => {\n        provider = new ethers.providers.Web3Provider(wallet.provider)\n        console.log(provider)\n        signer = provider.getSigner()\n        console.log(`connected to ${wallet.name}`);\n        \n      }\n    }\n  });\n  \n   async function login() {\n    await onboard.walletSelect();\n    await onboard.walletCheck();\n  }\n\n    async function getblockstate() {\n      // @ts-ignore\n      const blocknumb = await provider.getBlockNumber()\n      console.log(blocknumb)\n    }\n\n  return (\n    <div className=\"App\">\n      <div className=\"connectToWalletModule\">\n        <button onClick={login}>\n          Connect To Wallet\n        </button>\n        <button onClick={getblockstate}>\n          Connect To Wallet\n        </button>\n      </div>\n      <div className=\"profile\">\n\n      </div>\n      \n\n    </div>\n  );\n}\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {RecoilRoot} from 'recoil';\n\nReactDOM.render(\n  \n  <React.StrictMode>\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}